package com.haoeyou.user.activity;

import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.Rect;
import android.os.Bundle;
import android.support.v7.widget.GridLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.haoeyou.user.R;
import com.haoeyou.user.adapter.GridImageAdapter;
import com.haoeyou.user.base.BaseActivity;
import com.haoeyou.user.common.Common;
import com.haoeyou.user.event.ItemListener;
import com.haoeyou.user.mvp.presenter.BasePresenter;
import com.haoeyou.user.utils.PictureUtils;
import com.luck.picture.lib.compress.Luban;
import com.luck.picture.lib.model.FunctionConfig;
import com.luck.picture.lib.model.FunctionOptions;
import com.luck.picture.lib.model.PictureConfig;
import com.yalantis.ucrop.entity.LocalMedia;

import java.util.ArrayList;
import java.util.List;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

/**
 * 类名: {@link AddRecordActivity}
 * <br/> 功能描述:添加病历
 * <br/> 作者: MouTao
 * <br/> 时间: 2017/5/25
 */
public class AddRecordActivity extends BaseActivity implements ItemListener<LocalMedia> {
    @Bind(R.id.title_back)
    ImageView mTitleBack;
    @Bind(R.id.title_tv)
    TextView mTitleTv;
    @Bind(R.id.more)
    TextView mMore;
    @Bind(R.id.toolbar_layout)
    RelativeLayout mToolbarLayout;
    @Bind(R.id.pic_list)
    RecyclerView mPicList;
    @Bind(R.id.message)
    EditText mMessage;
    private Context mContext;
    public static final String TAG = "AddRecordActivity";
    private GridImageAdapter adapter;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_add_record;
    }

    @Override
    protected void initInjector() {
        mContext = this;
        ButterKnife.bind(this);
        initRecycleView();
    }

    @Override
    protected void initEventAndData() {
        mMore.setText("完成");
        mTitleTv.setText("添加病历");
        mMore.setTextColor(Color.parseColor("#F1F1F1"));
        mMore.setClickable(false);
        //        final Drawable drawable = getResources().getDrawable(R.drawable.icon_insert);
        //        // 这一步必须要做,否则不会显示.
        //        drawable.setBounds(0, 0, drawable.getMinimumWidth(), drawable.getMinimumHeight());

        mMessage.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {

            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (count != 0) {
                    //                    mMessage.setCompoundDrawables(null, null, null, null);
                }
            }

            @Override
            public void afterTextChanged(Editable s) {
                if (TextUtils.isEmpty(s)) {
                    //                    mMessage.setCompoundDrawables(drawable, null, null, null);
                    mMore.setTextColor(Color.parseColor("#F1F1F1"));
                    mMore.setClickable(false);
                } else {
                    mMore.setTextColor(Color.parseColor("#3eb0ff"));
                    mMore.setClickable(true);
                }
            }
        });
    }

    @Override
    public BasePresenter getPresenter() {
        return null;
    }


    @OnClick({R.id.title_back, R.id.more})
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.title_back:
                finish();
                break;
            case R.id.more:
                break;
        }
    }


    private List<LocalMedia> selectMedia = new ArrayList<LocalMedia>();
    private PictureConfig.OnSelectResultCallback resultCallback = new PictureConfig.OnSelectResultCallback() {
        @Override
        public void onSelectSuccess(List<LocalMedia> resultList) {
            // 多选回调
            selectMedia = resultList;
            Log.i("callBack_result", selectMedia.size() + "");
            LocalMedia media = resultList.get(0);
            if (media.isCut() && !media.isCompressed()) {
                // 裁剪过
                String path = media.getCutPath();
            } else if (media.isCompressed() || (media.isCut() && media.isCompressed())) {
                // 压缩过,或者裁剪同时压缩过,以最终压缩过图片为准
                String path = media.getCompressPath();
            } else {
                // 原图地址
                String path = media.getPath();
            }
            if (selectMedia != null) {
                adapter.setList(selectMedia);
                adapter.notifyDataSetChanged();
            }
        }

        @Override
        public void onSelectSuccess(LocalMedia media) {
            // 单选回调
            selectMedia.add(media);
            if (selectMedia != null) {
                adapter.setList(selectMedia);
                adapter.notifyDataSetChanged();
            }
        }
    };

    public void initRecycleView() {
        GridLayoutManager mgr = new GridLayoutManager(mContext, 4);
        mPicList.setLayoutManager(mgr);
        mPicList.addItemDecoration(new RecyclerView.ItemDecoration() {
            @Override
            public void getItemOffsets(Rect outRect, int itemPosition, RecyclerView parent) {
                outRect.set(10, 10, 10, 20);
            }
        });

        adapter = new GridImageAdapter(AddRecordActivity.this, onAddPicClickListener);
        adapter.setList(selectMedia);
        adapter.setSelectMax(10);
        mPicList.setAdapter(adapter);

        adapter.setOnItemClickListener(new GridImageAdapter.OnItemClickListener() {
            @Override
            public void onItemClick(int position, View v) {
                // 预览图片 可长按保存 也可自定义保存路径
                //PictureConfig.getInstance().externalPicturePreview(MainActivity.this, "/custom_file", position, 
                // selectMedia);
                PictureConfig.getInstance().externalPicturePreview(AddRecordActivity.this, position, selectMedia);

            }
        });

    }

    /**
     * 删除图片回调接口
     */
    private GridImageAdapter.onAddPicClickListener onAddPicClickListener = new GridImageAdapter.onAddPicClickListener
            () {
        @Override
        public void onAddPicClick(int type, int position) {
            switch (type) {
                case 0:
                    // 进入相册
                    FunctionOptions options = PictureUtils.getAddPicOptions(selectMedia);
                    PictureConfig.getInstance().init(options).openPhoto(AddRecordActivity.this, resultCallback);
                    break;
                case 1:
                    // 删除图片
                    selectMedia.remove(position);
                    adapter.notifyItemRemoved(position);
                    break;
            }
        }
    };

    @Override
    public void onItemClick(View view, int position, LocalMedia mData) {

    }

    /**
     * @param ct   上下文
     * @param from 从哪儿跳来的
     */
    public static void startAction(Context ct, String from) {
        Intent itt = new Intent(ct, AddRecordActivity.class);
        Bundle bundle = new Bundle();
        bundle.putString(Common.FROM, from);
        itt.putExtras(bundle);
        ct.startActivity(itt);
    }
}
