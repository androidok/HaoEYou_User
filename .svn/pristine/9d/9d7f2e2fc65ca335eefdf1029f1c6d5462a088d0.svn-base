package com.haoeyou.user.common;

import android.app.Application;
import android.app.NotificationManager;
import android.view.Display;

import com.bumptech.glide.Glide;
import com.bumptech.glide.load.engine.cache.LruResourceCache;
import com.haoeyou.user.utils.CrashHandler;
import com.haoeyou.user.utils.SharedPreferencesHelper;
import com.luck.picture.lib.compress.Luban;
import com.luck.picture.lib.model.FunctionConfig;
import com.luck.picture.lib.model.FunctionOptions;
import com.luck.picture.lib.model.PictureConfig;
import com.zhy.http.okhttp.OkHttpUtils;

import java.io.File;
import java.util.concurrent.TimeUnit;

import okhttp3.OkHttpClient;

import static io.reactivex.processors.UnicastProcessor.create;

/**
 * 作者：Mou
 * 时间：2016/11/14 20:15
 * 邮箱：616707902@qq.com
 * 描述：
 */

public class MyApplication extends Application {
    /**
     * 系统通知栏提醒
     */
    public static NotificationManager notifyManager = null;
    private static MyApplication mMyApplication;
    //  public static RequestQueue queues;
    private Display display;
    private Thread.UncaughtExceptionHandler mDefaultHandler;

    @Override
    public void onCreate() {

        super.onCreate();
        mMyApplication = this;
        CrashHandler.getInstance().init(mMyApplication);
        init();
        initGlideConfig();
        FunctionOptions options = new FunctionOptions.Builder().setType(FunctionConfig.TYPE_IMAGE).setCompress(true)
                .setGrade(Luban.THIRD_GEAR).create();
        PictureConfig.getInstance().init(options);
        isFirstLoad();
    }

    private void isFirstLoad() {
        //判断是否为第一次登录,如果是,则进入资料引导页,否则直接进入主界面
        Common.IS_FIRST_LOAD = SharedPreferencesHelper.getBoolean(getApplicationContext(), "FIRST", true);
        SharedPreferencesHelper.putBoolean(getApplicationContext(), "FIRST", false);
        Common.TOKEN = SharedPreferencesHelper.getString(getApplicationContext(), "TOKEN", "");
    }

    private void initGlideConfig() {
    }

    public String getCachePath() {
        File cacheDir;
        if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED))
            cacheDir = getExternalCacheDir();
        else
            cacheDir = getCacheDir();
        if (cacheDir != null && !cacheDir.exists())
            cacheDir.mkdirs();
        return cacheDir.getAbsolutePath();
    }

    /**
     * 初始化
     */
    private void init() {
        //进行okhttp初始化配置
        OkHttpClient okHttpClient = new OkHttpClient.Builder()
                //                .addInterceptor(new LoggerInterceptor("TAG"))
                .connectTimeout(10000L, TimeUnit.MILLISECONDS).readTimeout(10000L, TimeUnit.MILLISECONDS)
                //其他配置
                .build();

        OkHttpUtils.initClient(okHttpClient);


    }


    public static MyApplication getApplication() {
        return mMyApplication;
    }

    @Override
    public void onTerminate() {
        if (this.notifyManager != null) {
            notifyManager.cancelAll();
        }
        super.onTerminate();
    }
}
