package com.haoeyou.user.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.Gravity;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewGroup;
import android.webkit.WebChromeClient;
import android.webkit.WebSettings;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.haoeyou.user.R;
import com.haoeyou.user.base.BaseActivity;
import com.haoeyou.user.common.Common;
import com.haoeyou.user.entity.PickerListener;
import com.haoeyou.user.event.MVPCallBack;
import com.haoeyou.user.mvp.presenter.BasePresenter;
import com.haoeyou.user.mvp.presenter.FillArchivesPresenter;
import com.haoeyou.user.mvp.presenter.WebPagePresenter;
import com.haoeyou.user.mvp.view.WebPageView;
import com.haoeyou.user.widget.dialog.AlertDialog;
import com.haoeyou.user.widget.dialog.ButtomDialog;

import java.util.ArrayList;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class WebPageActivity extends BaseActivity implements WebPageView {
    public final static String TAG = "WebPageActivity";
    @Bind(R.id.order)
    Button mOrder;
    private Context mContext;
    private String path;

    @Bind(R.id.title_back)
    ImageView mTitleBack;
    @Bind(R.id.title_tv)
    TextView mTitleTv;
    @Bind(R.id.more)
    TextView mMore;
    @Bind(R.id.toolbar_layout)
    RelativeLayout mToolbarLayout;
    @Bind(R.id.web_view)
    WebView mWebView;


    @Override
    protected int getLayoutId() {
        return R.layout.activity_web_page;
    }

    @Override
    protected void initInjector() {
        mContext = this;
        ButterKnife.bind(this);
    }

    @Override
    public BasePresenter getPresenter() {
        return new WebPagePresenter();
    }


    @OnClick({R.id.title_back, R.id.more, R.id.order})
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.title_back:
                finish();
                break;
            case R.id.order:
                gotoOrder();
                break;
        }
    }

    private void gotoOrder() {
        switch (mTitleTv.getText().toString()) {
            case "远程咨询":
                break;
            case "赴美就医":
                break;
            case "健康管理":
                break;
        }
        String jsonBean = "";
        ((WebPagePresenter) mPresenter).getNameList(mContext, jsonBean);
        initNameDialog();

    }

    @Override
    protected void initEventAndData() {
        path = this.getIntent().getExtras().getString("URL");
        mTitleTv.setText(this.getIntent().getExtras().getString("TITLE"));
        initWebView();

    }

    private void initWebView() {
        //更多内容访问:http://blog.csdn.net/carson_ho/article/details/52693322
        //声明WebSettings子类
        WebSettings webSettings = mWebView.getSettings();
        //如果访问的页面中要与Javascript交互，则webview必须设置支持Javascript
        webSettings.setJavaScriptEnabled(true);
        //设置自适应屏幕，两者合用
        webSettings.setUseWideViewPort(true); //将图片调整到适合webview的大小 
        webSettings.setLoadWithOverviewMode(true); // 缩放至屏幕的大小
        //缩放操作
        webSettings.setSupportZoom(true); //支持缩放，默认为true。是下面那个的前提。
        webSettings.setBuiltInZoomControls(true); //设置内置的缩放控件。若为false，则该WebView不可缩放
        webSettings.setDisplayZoomControls(false); //隐藏原生的缩放控件
        //其他细节操作
        webSettings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); //关闭webview中缓存 
        webSettings.setAllowFileAccess(true); //设置可以访问文件 
        webSettings.setJavaScriptCanOpenWindowsAutomatically(true); //支持通过JS打开新窗口 
        webSettings.setLoadsImagesAutomatically(true); //支持自动加载图片
        webSettings.setDefaultTextEncodingName("utf-8");//设置编码格式
        webSettings.setAppCachePath(Common.PHONE_PATH + "cache"); //设置  Application Caches 缓存目录 
        webSettings.setCacheMode(WebSettings.LOAD_DEFAULT);//根据cache-control决定是否从网络上取数据。
        mWebView.setWebChromeClient(new WebChromeClient() {
            @Override
            public void onReceivedTitle(WebView view, String title) {
                super.onReceivedTitle(view, title);

            }
        });

        mWebView.loadUrl(path);
    }

    @Override
    protected void onResume() {
        super.onResume();
        mWebView.onResume();
    }

    @Override
    protected void onPause() {
        super.onPause();
        mWebView.onPause();
    }

    @Override
    protected void onDestroy() {
        if (mWebView != null) {
            mWebView.loadDataWithBaseURL(null, "", "text/html", "utf-8", null);
            mWebView.clearHistory();
            //            mwebview.clearcache(true);
            ((ViewGroup) mWebView.getParent()).removeView(mWebView);
            mWebView.destroy();
            mWebView = null;
        }
        super.onDestroy();
    }


    //点击返回上一页面而不是退出浏览器
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (keyCode == KeyEvent.KEYCODE_BACK && mWebView.canGoBack()) {
            mWebView.goBack();
            return true;
        }

        return super.onKeyDown(keyCode, event);
    }

    /**
     * @param ct   上下文
     * @param from 从哪儿跳来的
     */
    public static void startAction(Context ct, String from, String URL, String title) {
        Intent itt = new Intent(ct, WebPageActivity.class);
        Bundle bundle = new Bundle();
        bundle.putString("URL", URL);
        bundle.putString("TITLE", title);
        bundle.putString(Common.FROM, from);
        itt.putExtras(bundle);
        ct.startActivity(itt);
    }

    @Override
    public void showLoadProgressDialog(String str) {

    }

    @Override
    public void disDialog() {

    }

    @Override
    public void getNameListSucceed() {
        initNameDialog();
    }

    private void initNameDialog() {
        ArrayList<String> stringArray = new ArrayList<>();
        stringArray.add(new String("唐僧"));
        stringArray.add(new String("白骨精"));
        stringArray.add(new String("表哥哥"));
        stringArray.add(new String("表妹们"));
        stringArray.add(new String("孙悟空"));
        stringArray.add(new String("白龙马"));
        new ButtomDialog(mContext).builder().setDialogShowBottom().initData(stringArray).setPickerListener(new PickerListener() {
            @Override
            public void pickerData(int position, String data) {
                showToast(position + ":" + data);
//                ServiceOrderActivity.startAction(mContext, WebPageActivity.TAG);
                showDialog("请先填写完整健康信息哦");
            }
        }).show();

    }

    public void showDialog(String message) {
        new AlertDialog(this).setWidthRatio(0.7f).setMessageGravity(Gravity.CENTER).builder().hideTitleLayout()
                .setMsg(message).setNegativeButton(("去填写"), new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                FillArchivesActivity.startAction(mContext, WebPageActivity.TAG, "1", FillArchivesActivity.CHANGE);
            }
        }).show();
    }
}
