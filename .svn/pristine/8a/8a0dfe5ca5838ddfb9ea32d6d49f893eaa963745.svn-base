package com.haoeyou.user.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.inputmethod.InputMethodManager;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.haoeyou.user.R;
import com.haoeyou.user.base.BaseActivity;
import com.haoeyou.user.common.Common;
import com.haoeyou.user.entity.PickerListener;
import com.haoeyou.user.fragment.FourthFragment;
import com.haoeyou.user.mvp.presenter.BasePresenter;
import com.haoeyou.user.utils.PickerUtils;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class FillArchivesActivity extends BaseActivity {
    public final static String TAG = "FillArchivesActivity";
    private Context mContext;
    @Bind(R.id.title_back)
    ImageView mTitleBack;
    @Bind(R.id.title_tv)
    TextView mTitleTv;
    @Bind(R.id.more)
    TextView mMore;
    @Bind(R.id.image_more)
    ImageView mImageMore;
    @Bind(R.id.toolbar_layout)
    RelativeLayout mToolbarLayout;
    @Bind(R.id.name)
    EditText mName;
    @Bind(R.id.sex)
    TextView mSex;
    @Bind(R.id.birthday)
    TextView mBirthday;
    @Bind(R.id.old)
    TextView mOld;
    @Bind(R.id.tel)
    EditText mTel;
    @Bind(R.id.urgent_phone)
    EditText mUrgentPhone;
    @Bind(R.id.area)
    TextView mArea;
    @Bind(R.id.is_exercise)
    TextView mIsExercise;
    @Bind(R.id.is_smoking)
    TextView mIsSmoking;
    @Bind(R.id.is_drinking)
    TextView mIsDrinking;
    @Bind(R.id.genetic_history)
    TextView mGeneticHistory;
    @Bind(R.id.allergy)
    TextView mAllergy;
    @Bind(R.id.department)
    TextView mDepartment;
    @Bind(R.id.normal_btn)
    Button mNormalBtn;
    @Bind(R.id.button_layout)
    LinearLayout mButtonLayout;
 
    private PickerUtils mPicker;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_fill_archives;
    }

    @Override
    protected void initInjector() {
        mContext = this;
        ButterKnife.bind(this);
    }

    @Override
    protected void initEventAndData() {
        mTitleTv.setText("基本资料");
        mMore.setText("完成");
        mPicker = new PickerUtils(mContext);
    }

    @Override
    public BasePresenter getPresenter() {
        return null;
    }

    @OnClick({R.id.title_back, R.id.more, R.id.sex, R.id.birthday, R.id.area, R.id.is_exercise, R.id.is_smoking, R.id
            .is_drinking, R.id.genetic_history, R.id.allergy, R.id.department, R.id.normal_btn})
    public void onViewClicked(View view) {
        closeInputBroad();
        switch (view.getId()) {
            case R.id.title_back:
                break;
            case R.id.more:
                break;
            case R.id.sex:
                showSexPicker();
                break;
            case R.id.birthday:
                showBirthdayPicker();
                break;
            case R.id.area:
                showAreaPicker();
                break;
            case R.id.is_exercise:
                showWhetherPicker(mIsExercise);
                break;
            case R.id.is_smoking:
                showWhetherPicker(mIsSmoking);
                break;
            case R.id.is_drinking:
                showWhetherPicker(mIsDrinking);
                break;
            case R.id.genetic_history:
                gotoEditInfo(FourthFragment.TAG, mGeneticHistory.getText().toString(), 100, EditInfoActivity.class);
                break;
            case R.id.allergy://过敏
                gotoEditInfo(FourthFragment.TAG, mAllergy.getText().toString(), 101, EditInfoActivity.class);
                break;
            case R.id.department:
                gotoEditInfo(FillingActivity.TAG, "", 102, CareDepartmentActivity.class);
                break;
            case R.id.normal_btn:
                break;
        }
    }


    private void showSexPicker() {
        mPicker.buildSexPicker(new PickerListener() {
            @Override
            public void pickerData(String data) {
                mSex.setText(data);
            }
        });
    }

    private void showWhetherPicker(final TextView edit) {
        mPicker.buildWhetherPicker(new PickerListener() {
            @Override
            public void pickerData(String data) {
                edit.setText(data);
            }
        });
    }

    private void showBirthdayPicker() {
        mPicker.buildBirthdayPicker(new PickerListener() {
            @Override
            public void pickerData(String data) {
                mBirthday.setText(data);
            }
        });
    }

    private void showAreaPicker() {
        mPicker.buildAreaPicker(new PickerListener() {
            @Override
            public void pickerData(String data) {
                mArea.setText(data);
            }
        });
    }


    private void gotoEditInfo(String from, String info, int requestCode, Class<?> cls) {
        Intent itt = new Intent(FillArchivesActivity.this, cls);
        Bundle bundle = new Bundle();
        bundle.putString(Common.FROM, from);
        bundle.putString("PRE_INFO", info);
        itt.putExtras(bundle);
        startActivityForResult(itt, requestCode);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (1 == resultCode) {
            if (100 == requestCode) {
                mGeneticHistory.setText(data.getExtras().get("INFO").toString());
            } else if (101 == requestCode) {
                mAllergy.setText(data.getExtras().get("INFO").toString());
            } else if (102 == requestCode) {
                mDepartment.setText(data.getExtras().get("DEPART").toString());
            }
        }
    }

    /**
     * <br/> 方法名称: closeInputBroad
     * <br/> 方法详述: 关闭软键盘
     */
    private void closeInputBroad() {
        InputMethodManager imm = (InputMethodManager) this.getSystemService(Context.INPUT_METHOD_SERVICE);
        imm.hideSoftInputFromWindow(mName.getWindowToken(), 0);
        imm.hideSoftInputFromWindow(mTel.getWindowToken(), 0);
    }

    /**
     * @param ct   上下文
     * @param from 从哪儿跳来的
     */
    public static void startAction(Context ct, String from) {
        Intent itt = new Intent(ct, FillArchivesActivity.class);
        Bundle bundle = new Bundle();
        bundle.putString(Common.FROM, from);
        itt.putExtras(bundle);
        ct.startActivity(itt);
    }
}
