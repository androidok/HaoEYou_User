package com.haoeyou.user.activity;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.support.v7.widget.DividerItemDecoration;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.text.Editable;
import android.text.TextUtils;
import android.text.TextWatcher;
import android.view.View;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.google.gson.Gson;
import com.haoeyou.user.R;
import com.haoeyou.user.adapter.BaseRecyclerAdapter;
import com.haoeyou.user.adapter.DepartListHolder;
import com.haoeyou.user.adapter.DoctorListHolder;
import com.haoeyou.user.base.BaseActivity;
import com.haoeyou.user.bean.CategoryRequestBean;
import com.haoeyou.user.common.Common;
import com.haoeyou.user.event.ItemListener;
import com.haoeyou.user.fragment.SecondFragment;
import com.haoeyou.user.mvp.presenter.BasePresenter;
import com.haoeyou.user.mvp.presenter.CareDepartmentPresenter;
import com.haoeyou.user.mvp.presenter.SearchPresenter;
import com.haoeyou.user.mvp.view.SearchView;

import java.util.ArrayList;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;

public class SearchActivity extends BaseActivity implements SearchView {
    private final static String TAG = "SearchActivity";
    @Bind(R.id.title_back)
    ImageView mTitleBack;
    @Bind(R.id.title_tv)
    TextView mTitleTv;
    @Bind(R.id.toolbar_layout)
    RelativeLayout mToolbarLayout;
    @Bind(R.id.filter)
    EditText mFilter;
    @Bind(R.id.clean)
    ImageView mClean;
    @Bind(R.id.doctor_recycle)
    RecyclerView mDoctorRecycle;
    @Bind(R.id.department_recycle)
    RecyclerView mDepartmentRecycle;
    @Bind(R.id.nothing)
    View mNothing;
    @Bind(R.id.filter_layout)
    LinearLayout mFilterLayout;
    private Context mContext;
    private BaseRecyclerAdapter mDoctorAdapter;
    private BaseRecyclerAdapter mDepartmentAdapter;

    @Override
    protected int getLayoutId() {
        return R.layout.activity_search;
    }

    @Override
    protected void initInjector() {
        mContext = this;
    }

    @Override
    protected void initEventAndData() {
        initWidget();
        initRecyclerView();
        setDoctorAdapter();
        setDepartmentAdapter();

    }

    @Override
    public BasePresenter getPresenter() {
        return new SearchPresenter();
    }

    private void initWidget() {
        mTitleTv.setText("搜索");
        initEditText();
    }

    @OnClick({R.id.title_back, R.id.clean, R.id.nothing})
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.title_back:
                finish();
                break;
            case R.id.clean:
                mFilter.setText("");
                break;
            case R.id.nothing:
                mFilterLayout.setVisibility(View.INVISIBLE);
                break;
        }
    }

    private void initEditText() {
        mFilter.addTextChangedListener(new TextWatcher() {
            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                mFilterLayout.setVisibility(View.VISIBLE);
            }

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                if (count == 0)
                    return;
                //TODO 获取结果
            }

            @Override
            public void afterTextChanged(Editable s) {
                if (TextUtils.isEmpty(mFilter.getText().toString())) {
                    mFilter.setVisibility(View.INVISIBLE);
                }
            }
        });

    }

    private void initRecyclerView() {
        LinearLayoutManager mgrDoctor = new LinearLayoutManager(mContext);
        mgrDoctor.setOrientation(LinearLayoutManager.VERTICAL);
        mDoctorRecycle.setLayoutManager(mgrDoctor);

        LinearLayoutManager mgrDepart = new LinearLayoutManager(mContext);
        mgrDepart.setOrientation(LinearLayoutManager.VERTICAL);
        mDepartmentRecycle.setLayoutManager(mgrDepart);
        mDepartmentRecycle.addItemDecoration(new DividerItemDecoration(mContext, DividerItemDecoration.VERTICAL));
    }

    public void setDoctorAdapter() {
        ArrayList<String> list = new ArrayList<>();
        if (mDoctorRecycle == null)
            return;
        if (mDoctorAdapter == null) {
            mDoctorAdapter = new BaseRecyclerAdapter(list, R.layout.adapter_doctor_item, DoctorListHolder.class, new 
                    ItemListener<String>() {
                @Override
                public void onItemClick(View view, int position, String mData) {
                    DoctorActivity.startAction(mContext, SearchActivity.TAG);
                }
            });
            mDoctorRecycle.setAdapter(mDoctorAdapter);
        } else {
            if ((mDoctorAdapter.getItem(0) == null) && (list.size() == 0))
                return;
            if ((mDoctorAdapter.getItem(0) == null) || (list.size() == 0))
                mDoctorAdapter.setmDatas(list);
        }
    }

    public void setDepartmentAdapter() {
        ArrayList<String> list = new ArrayList<>();
        if (mDepartmentRecycle == null)
            return;
        if (mDepartmentAdapter == null) {
            mDepartmentAdapter = new BaseRecyclerAdapter(list, R.layout.adapter_depart_item, DepartListHolder.class, 
                    new ItemListener<String>() {
                @Override
                public void onItemClick(View view, int position, String mData) {

                }
            });
            mDepartmentRecycle.setAdapter(mDepartmentAdapter);
        } else {
            if ((mDepartmentAdapter.getItem(0) == null) && (list.size() == 0))
                return;
            if ((mDepartmentAdapter.getItem(0) == null) || (list.size() == 0))
                mDepartmentAdapter.setmDatas(list);
        }
    }

    /**
     * @param ct   上下文
     * @param from 从哪儿跳来的
     */
    public static void startAction(Context ct, String from) {
        Intent itt = new Intent(ct, SearchActivity.class);
        Bundle bundle = new Bundle();
        bundle.putString(Common.FROM, from);
        itt.putExtras(bundle);
        ct.startActivity(itt);
    }

    @Override
    public void showLoadProgressDialog(String str) {

    }

    @Override
    public void disDialog() {

    }

    @Override
    public void setSearchItem(ArrayList<String> mList) {
        mDepartmentAdapter.setmDatas(mList);
    }

    @Override
    public void setDoctorList() {

    }

    @Override
    public void onBackPressed() {
        if (View.VISIBLE == mFilterLayout.getVisibility()) {
            mFilterLayout.setVisibility(View.INVISIBLE);
        } else {
            finish();
        }
    }
}
